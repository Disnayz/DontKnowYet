import unittest
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

class TestLogin(unittest.TestCase):

    @classmethod
    def setUpClass(cls):
        options = Options()
        options.add_argument("--window-size=1920,1080")
        cls.driver = webdriver.Chrome(options=options)
        cls.driver.get("https://practicetestautomation.com/practice-test-login")

    def test_login(self):
        # Wprowadzenie danych logowania
        username = WebDriverWait(self.driver, 10).until(
            EC.presence_of_element_located((By.ID, "username"))
        )
        username.send_keys("student")

        password = self.driver.find_element(By.ID, "password")
        password.send_keys("Password123")

        submit = self.driver.find_element(By.ID, "submit")
        submit.click()

        # Sprawdzenie, czy użytkownik jest zalogowany
        WebDriverWait(self.driver, 10).until(
            EC.presence_of_element_located((By.XPATH, "//h1[contains(text(), 'Logged in')]"))
        )
        print('Zalogowano')

        # Sprawdzenie URL
        expected_url = "https://practicetestautomation.com/logged-in-successfully/"
        current_url = self.driver.current_url
        self.assertEqual(current_url, expected_url, "URL jest niepoprawny")

        # Sprawdzenie przycisku wylogowania
        try:
            logout_link = self.driver.find_element(By.XPATH, "//a[text()='Log out']")
            print("Przycisk został znaleziony")
        except NoSuchElementException:
            self.fail("Przycisk wylogowania nie został znaleziony")

    @classmethod
    def tearDownClass(cls):
        cls.driver.quit()  # Zamknięcie przeglądarki

if __name__ == "__main__":
    unittest.main()
